apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-topic-init
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "crypto-trackers.labels" . | nindent 4 }}
    app.kubernetes.io/component: kafka-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        {{- include "crypto-trackers.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: kafka-init
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-kafka
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - until nc -z kafka-service 9092; do echo waiting for kafka; sleep 2; done;
      containers:
      - name: kafka-topic-init
        image: {{ .Values.kafka.image }}
        command: ['sh', '-c']
        args:
        - |
          # Create crypto-prices topic
          kafka-topics --bootstrap-server kafka-service:9092 --create --if-not-exists --topic {{ .Values.config.kafka.topics.cryptoPrices }} --partitions 3 --replication-factor 1
          
          # Create trading-signals topic  
          kafka-topics --bootstrap-server kafka-service:9092 --create --if-not-exists --topic {{ .Values.config.kafka.topics.tradingSignals }} --partitions 3 --replication-factor 1
          
          # List topics to verify creation
          kafka-topics --bootstrap-server kafka-service:9092 --list
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-service:9092"